{"remainingRequest":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\src\\views\\class\\list.vue?vue&type=template&id=ede51422&","dependencies":[{"path":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\src\\views\\class\\list.vue","mtime":1624372380953},{"path":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\YifanWang\\Desktop\\dra-wave\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}